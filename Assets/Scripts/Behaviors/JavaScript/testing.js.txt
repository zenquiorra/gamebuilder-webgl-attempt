/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

function runUnitTests(suiteName, testsByLabel) {
  let numTests = 0;
  for (let label in testsByLabel) {
    try {
      testsByLabel[label]();
      numTests++;
    } catch (e) {
      throw new Error(
        `Test '${label}' from suite ${suiteName} failed with exception: ${e.stack}`
      );
    }
  }
  // sysLog(`Ok all ${numTests} tests in ${suiteName} passed!`);
}

function assert(cond, message) {
  if (!cond) {
    let msg = `Assert failed: ${message}`;
    throw new Error(msg);
  }
  // Return cond so that we can assert return values on the fly, like:
  //   let thing = assert(getThing(), "Thing not found");
  return cond;
}

function assertThrows(code, message) {
  assert(typeof code == 'function');
  let threw = false;
  try {
    code();
  }
  catch (e) {
    threw = true;
  }
  assert(threw, `Expected to throw, but did not. More info: ${message}`);
}